---
title: "Final_Jeffrey"
author: "Jack Jeffrey"
format: pdf
editor: visual
---

## Final

```{r}
# Set working directory and CRAN mirror
setwd("/Users/jackjeffrey/Documents/Poli502_Jeffrey/final502")
options(repos = c(CRAN = "https://cran.rstudio.com/"))

# Install and load required packages
required_packages <- c("dplyr", "ggplot2", "knitr", "kableExtra", "stargazer", "pROC", "tidyverse")

# Check and install missing packages
for (pkg in required_packages) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    install.packages(pkg)
  }
  library(pkg, character.only = TRUE)
}
```

#1. 
```{r}
# Load the Titanic dataset
td <- read.csv("/Users/jackjeffrey/Documents/Poli502_Jeffrey/Data/titanic2.csv")


# View the structure of the dataset
str(td)

# View the first few rows of the dataset
head(td)

# Check for missing values in the relevant columns
sum(is.na(td$female))  # Missing values in gender
sum(is.na(td$fare))    # Missing values in fare

# Clean dataset by removing rows with NA values in the relevant columns
td_clean <- td[complete.cases(td[, c("survived", "fare", "female", "child")]), ]

# Boxplot to explore the relationship between gender and fare
boxplot(fare ~ female, data = td,
        main = "Ticket Fare by Gender",
        xlab = "Gender",
        ylab = "Fare",
        col = c("lightblue", "lightpink"))

# View summary statistics of fare by gender
tapply(td$fare, td$female, summary)

```
# 2. 
```{r}
# Perform a two-sample t-test to compare the fares between female and male passengers
t_test_result <- t.test(fare ~ female, data = td)
t_test_result

# Interpretation of results 
# The p-value of 1.585e-09 is extremely small, 
# the difference in means between female and male passengers 
# is statistically significant so the null hypothesis can be rejected. 
# The confidence interval for the difference in means 
# does not contain 0, which confirms a significant difference 
# between the fares for females and males.
```
#3a. 
```{r}
# Estimate the first logit model (original fare)
model1 <- glm(survived ~ fare + female + child, data = td_clean, family = "binomial")
model1

# Clean dataset to remove rows with fare <= 0
td_clean <- td_clean[td_clean$fare > 0, ]

# Estimate the second logit model (log of fare)
model2 <- glm(survived ~ log(fare) + female + child, data = td_clean, family = "binomial")
model2

# Display the results using stargazer
stargazer(model1, model2, type = "text", title = "Logit Models of Titanic Passenger Survival")
```
# 3b. 
```{r}
# Based on the model fit statistics, 
# Model 2 performs better. This is because it has a 
# lower Akaike Information Criterion (AIC) of 976.974 compared 
# to Model 1's AIC of 1000.716,
# indicating a better trade-off between model fit and complexity.
```
# 3c. 
```{r}
# Calculate the median values of the independent variables (female and child)
median_values <- data.frame(female = "Female", child = "Adult", fare = median(td$fare, na.rm = TRUE))

# Model 1: Using the original fare variable
fare_values_1 <- seq(0, 500, by = 1)  # Range for fare
predicted_1 <- predict(model1, newdata = expand.grid(fare = fare_values_1, female = "Female", child = "Adult"), type = "response")

# Model 2: Using the log-transformed fare variable
fare_values_2 <- seq(0, 500, by = 1)  # Range for fare
predicted_2 <- predict(model2, newdata = expand.grid(fare = fare_values_2, female = "Female", child = "Adult"), type = "response")

# First plot (Model 1)
ggplot(data.frame(fare = fare_values_1, survival_prob = predicted_1), aes(x = fare, y = survival_prob)) +
  geom_line(color = "blue") +
  labs(x = "Fare", y = "Predicted Survival Probability", title = "Effect of Fare on Survival (Model 1)") +
  theme_minimal()

# Plot Effect of fare on passenger survival for Model 2 (log-transformed fare)
ggplot(data.frame(fare = fare_values_2, survival_prob = predicted_2), aes(x = fare, y = survival_prob)) +
  geom_line(color = "red") +
  labs(x = "Fare", y = "Predicted Survival Probability", title = "Effect of Fare on Survival (Model 2)") +
  theme_minimal()
```

#3d. 
```{r}
# Set seed for reproducibility
set.seed(123)

# Remove rows with missing values for fare
td_clean_non_na <- td_clean[!is.na(td_clean$fare), ]

# Create a random 80-20 split
train_id <- sample(1:nrow(td_clean_non_na), nrow(td_clean_non_na) * 0.8)

# Split the data into training and test sets
train_data <- td_clean_non_na[train_id, ]
test_data <- td_clean_non_na[-train_id, ]

# Fit a logit model without the logged fare variable
model_no_log_fare <- glm(survived ~ fare + female + child, 
                         data = train_data, 
                         family = "binomial")

# Fit a logit model with the logged fare variable
model_with_log_fare <- glm(survived ~ log(fare) + female + child, 
                           data = train_data, 
                           family = "binomial")

# Predict survival probabilities using both models
pred_no_log_fare <- predict(model_no_log_fare, newdata = test_data, type = "response")
pred_with_log_fare <- predict(model_with_log_fare, newdata = test_data, type = "response")

# Generate ROC curve for both models
roc_no_log_fare <- roc(test_data$survived, pred_no_log_fare)
roc_with_log_fare <- roc(test_data$survived, pred_with_log_fare)

# Plot both ROC curves
plot(roc_no_log_fare, col = "red", main = "ROC Curves Comparison")
plot(roc_with_log_fare, col = "blue", add = TRUE)
legend("bottomright", legend = c("Model without log(fare)", "Model with log(fare)"), 
       col = c("red", "blue"), lty = 1)

# Print AUC values
auc_no_log_fare <- auc(roc_no_log_fare)
auc_with_log_fare <- auc(roc_with_log_fare)

cat("AUC for model without log(fare):", auc_no_log_fare, "\n")
cat("AUC for model with log(fare):", auc_with_log_fare, "\n")
```

# 3e. 
```{r}
# Fit the first logit model (female and child as predictors)
model_female_child <- glm(survived ~ female + child, 
                          data = td_clean_non_na, 
                          family = "binomial")

# Fit the second logit model (log(fare), female, and child as predictors)
model_log_fare_female_child <- glm(survived ~ log(fare) + female + child, 
                                   data = td_clean_non_na, 
                                   family = "binomial")

# Generate a stargazer table comparing both models
stargazer(model_female_child, model_log_fare_female_child, 
          type = "text", 
          title = "Comparison of Logit Models", 
          column.labels = c("Model 1: Female + Child", "Model 2: Log(Fare) + Female + Child"), 
          out = "logit_models_comparison.txt")
```
# 3f. 
```{r}
# Fit the first logit model (female and child as predictors)
model_female_child <- glm(survived ~ female + child, 
                          data = td_clean_non_na, 
                          family = "binomial")

# Fit the second logit model (log(fare), female, and child as predictors)
model_log_fare_female_child <- glm(survived ~ log(fare) + female + child, 
                                   data = td_clean_non_na, 
                                   family = "binomial")

# Fit the second logit model (log(fare), female, and child as predictors)
model_log_fare_female_child <- glm(survived ~ log(fare) + female + child, 
                                   data = td_clean_non_na, 
                                   family = "binomial")

# Generate a stargazer table comparing both models
stargazer(model_female_child, model_log_fare_female_child, 
          type = "text", 
          title = "Comparison of Logit Models", 
          column.labels = c("Model 1: Female + Child", "Model 2: Log(Fare) + Female + Child"), 
          out = "logit_models_comparison.txt")
# The second model seems to perform better bases on the lower AIC. 
```
# 3g. 
```{r}
# Get predicted probabilities for both models
pred_female_child <- predict(model_female_child, type = "response")
pred_log_fare_female_child <- predict(model_log_fare_female_child, type = "response")

# Generate ROC curves for both models
roc_female_child <- roc(td_clean_non_na$survived, pred_female_child)
roc_log_fare_female_child <- roc(td_clean_non_na$survived, pred_log_fare_female_child)

# Plot ROC curves for both models in one graph
plot(roc_female_child, col = "blue", main = "ROC Curves Comparison", 
     lwd = 2, xlim = c(0, 1), ylim = c(0, 1))
lines(roc_log_fare_female_child, col = "red", lwd = 2)
legend("bottomright", legend = c("Model 1: Female + Child", "Model 2: Log(Fare) + Female + Child"), 
       col = c("blue", "red"), lwd = 2)
```
# 3h. 
```{r}
# Generate ROC curves for both models (if not already done)
roc_female_child <- roc(td_clean_non_na$survived, pred_female_child)
roc_log_fare_female_child <- roc(td_clean_non_na$survived, pred_log_fare_female_child)

# Calculate AUC for both models
auc_female_child <- auc(roc_female_child)
auc_log_fare_female_child <- auc(roc_log_fare_female_child)

# Report AUC scores
auc_female_child
auc_log_fare_female_child

# The second model controlling for logfare has a higher 
# predictive power than the first model. 
```
# 3i. 
```{r}
# Based on the ROC curves and AUC scores, the model 
# that includes the logged fare variable performs better. 
# This is evident from its higher AUC score, which indicates 
# that it is more effective in distinguishing between survival 
# and non-survival outcomes compared to the model that only 
# includes female and child variables. Therefore, the 
# inclusion of the logged fare variable enhances 
# the model's predictive ability.
```

# 4.
```{r}
setwd("/Users/jackjeffrey/Documents/Poli502_Jeffrey/Data")
# Load dataset
putnam <- read.csv("putnam.csv")
# Preview data
head(putnam)

# Explore the dataset
str(putnam)  # Get the structure of the data
summary(putnam)  # Summary statistics of the dataset

# Check column names 
colnames(putnam)

# Create a dummy variable for North
putnam$North <- ifelse(putnam$NorthSouth == "North", 1, 0)

# (a)Simple linear regression model
model_a <- lm(InstPerform ~ CivicCommunity, data = putnam)
model_a

# (b)Fit additive model using dummy variable North
model_b <- lm(InstPerform ~ CivicCommunity + North, data = putnam)
model_b
# the regression equation would be as follows - 
# InstPerform=2.69850+0.57094×CivicCommunity−0.04781×North

# Fit the interactive model
model_c <- lm(InstPerform ~ CivicCommunity * North, data = putnam)
model_c

# Now we need to graph these models to understand the results 
```

# 6. 
```{r}
# Interpretation of Results 

# For Model 1 it is clear that there is a linear positive relationship, 
# indicating that across all regions as Civiv Community index increaes 
# Institutional Performance also increases 

# For Model 2 both regions held a positive linear relationship, 
# however the relationship was stronger in the Northern Region. 

# For Model 3 the relationship in both the North and South regions 
# is far more erratic. Neither region shows a clear positive 
# relationship and in some cases increased civic community index score
# is leading to reduced institutional performance. This indicates 
# there may be other factors at play, such as economic or cultural differences. 

# The results of these 3 models and their respective graphs suggest that
# regional distinctions do seem to be affecting the relationship between 
# civic community index and institutional performance. This makes regional 
# differences spurious in the sense that the positive relationship in 
# model 1 was misleading. There may be more complex factors at play
# and we may find more information when we use the variable economic 
# modernization instead of civic community index. 
```

#7. 
```{r}
# Model a simple linear regression (a)
model_a <- lm(InstPerform ~ EconModern, data = putnam)
summary(model_a)

# Create an additive model
putnam$North <- ifelse(putnam$NorthSouth == "North", 1, 0)
# Additive model with North-South control (Model b)
model_b <- lm(InstPerform ~ EconModern + North, data = putnam)
summary(model_b)

# Create an interactive model
model_c <- lm(InstPerform ~ EconModern * North, data = putnam)
summary(model_c)

# Install broom package 
library(broom)

# Create objects for each model 
model_a_summary <- tidy(model_a)
model_b_summary <- tidy(model_b)
model_c_summary <- tidy(model_c)

# Create a table for regression results

regression_table <- data.frame(
  Model = c("Model a (Simple)", "Model b (Additive)", "Model c (Interactive)"),
  Term = c(model_a_summary$term, model_b_summary$term, model_c_summary$term),
  Estimate = c(model_a_summary$estimate, model_b_summary$estimate, model_c_summary$estimate),
  Std_Error = c(model_a_summary$std.error, model_b_summary$std.error, model_c_summary$std.error),
  t_value = c(model_a_summary$statistic, model_b_summary$statistic, model_c_summary$statistic),
  p_value = c(model_a_summary$p.value, model_b_summary$p.value, model_c_summary$p.value)
)

# View regression table 
regression_table

# Interpretation of Results 

# Model A: The p-value of 0.9308 indicates that the models results are not 
# statistically signicant. The t value of -0.088096 confirms the effect is weak. 

# Model B: The p-value of 0.0001 indicates that the effect 
# of Economic Modernization on Institutional Performance 
# is statistically significant. However, the small effect size 
# of 0.5889 suggests that the relationship is weak.
# The coefficient for North is much larger (6.8839), indicating 
# that the regional distinction between North and South plays 
# a stronger role in explaining Institutional Performance. 

# Model C: The p-value for the interaction term 
# EconModern:North is 0.9146, which indicates that the 
# interaction between Economic Modernization and the North 
# region is not statistically significant. The intercept 
# for both the North and South regions is statistically significant, 
# with p-values of 0.0012 for the North and 0.0281 for the South, 
# indicating that Institutional Performance is positively 
# influenced by region, but the effect of Economic Modernization 
# remains insignificant.
```
# 8. 
```{r}
# Graph for Model A
ggplot(putnam, aes(x = EconModern, y = InstPerform)) +
  geom_point() +  # Plot the data points
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Regression line
  labs(title = "Marginal Effect of Economic Modernization (Model a)",
       x = "Economic Modernization",
       y = "Institutional Performance")
# There is a positive linear relationship between economic modernization
# and institutional performance 

# Graph for Model B
# Plot for North region 
ggplot(subset(putnam, North == 1), aes(x = EconModern, y = InstPerform)) +
  geom_point() +  # Plot the data points
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Regression line for North
  labs(title = "Marginal Effect of Economic Modernization (North - Model b)",
       x = "Economic Modernization",
       y = "Institutional Performance")

# Plot for South region 
ggplot(subset(putnam, North == 0), aes(x = EconModern, y = InstPerform)) +
  geom_point() +  # Plot the data points
  geom_smooth(method = "lm", se = FALSE, color = "red") +  # Regression line for South
  labs(title = "Marginal Effect of Economic Modernization (South - Model b)",
       x = "Economic Modernization",
       y = "Institutional Performance")

# Based on the graphs for these two models, there does not seem to be 
# any real relationship between economic modernization and institutional 
# performance in either the north or south regions. 

# Graph for Model C
ggplot(putnam, aes(x = EconModern, y = InstPerform, color = factor(North))) +
  geom_point() +  # Plot the data points
  geom_smooth(method = "lm", se = FALSE) +  # Regression line
  facet_wrap(~ North, labeller = labeller(North = c("0" = "South", "1" = "North"))) +  # Two panels for North and South
  labs(
    title = "Marginal Effect of Economic Modernization (Model c)",
    x = "Economic Modernization",
    y = "Institutional Performance"
  )

# The results of the side by side graph reinforce the findings from 
# model B that there is not a strong relationship
# between our two variables. The North has a much larger intercept
# and even though the relationship is negative, the slope is very slight.
# The South has a smaller y intercept and is positive, but once 
# again the slope is very slight making it difficult to draw conlcusions
# from either graph. 
```
# 9. 
```{r}
# Interpretation of results from graphs and regression figures


# Model b shows that both economic modernization
# and the North-South distinction have statistically significant 
# effects on Institutional Performance, 
# the interaction term in Model c does not suggest 
# that the relationship between economic modernization 
# and institutional performance is drastically altered by region. 
# The weak and statistically insignificant results 
# in both the regression and graphs suggest that the effect 
# of economic modernization on institutional performance 
# is minimal and does not substantially change 
# when considering regional distinctions.

# While regional distinctions may influence 
# institutional performance independently, 
# they do not appear to make the relationship between 
# economic Modernization and institutional Performance spurious.

# Essentially the weak relationship between economic modernization
# and institutional performance exists even when 
# accounting for the regional distinction
```

#10. 
```{r}
# Yi: dependent variable
# Xi: indpendent variable 
# a: intercept 
# B: Slope 
# Ui: Error Term 

# Step 1: Write the formula for the slope\
# (β)
# β = Σ[(Xi - mean(X))(Yi - mean(Y))] / 
# Σ[(Xi - mean(X))^2]
# Numerator: Covariance between X and Y
# Denominator: Variance of X

# Step 2: Substitute covariance and variance
# into the slope formula
# β = [Σ(Xi * Yi) / n - (mean(X) * mean(Y))] /
# [Σ(Xi^2) / n - mean(X)^2]

# Step 3: Write the formula for the intercept
# (α)
# α = mean(Y) - β * mean(X)

# Step 4: Express the regression equation with
# the derived coefficients
# Yi = (mean(Y) - β * mean(X)) + β * Xi + µi
# Simplified to: Yi = α + βXi + µi
```