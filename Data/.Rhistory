table(world.data $ frac_eth3)
# view table
tail(world.data[c("country", "frac_eth3")])
# view table with country names
world.data $ frac_eth3_ord <- factor(world.data $ frac_eth3,
level = c("Low", "Medium", "High"), # order it in this way
ordered = TRUE)
table(world.data $ frac_eth3_ord)
# order the variable names
table(world.data $ frac_eth3)
table(world.data $ frac_eth3_ord)
# compare tables
table( world.data $ frac_eth3, world.data $ frac_eth3_ord )
# created two by two table
table( world.data $ pr, world.data $ frac_eth3_ord )
# created X Y table
install.packages("gmodels")
library(gmodels)
CrossTable(world.data$pr, world.data$frac_eth3_ord)
CrossTable( world.data $ pr, world.data $ frac_eth3_ord,
prop.r = FALSE,
prop.t = FALSE,
prop.chisq = FALSE,
chisq = TRUE)
# removed outputs for crosstbale
summary(world.data $ free_labor)
# view statistics for free labor variable
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages(c("askpass", "bit", "bit64", "boot", "broom", "curl", "data.table", "evaluate", "foreign", "fs", "glue", "gtable", "jsonlite", "MASS", "Matrix", "nlme", "openssl", "ps", "ragg", "rmarkdown", "rstudioapi", "survival", "sys", "tinytex", "withr", "xfun"))
library(tidyverse)
# loaded tidyverse package
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
g <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
g
summary(world.data $ free_labor)
install.packages("tidyverse")
library(tidyverse)
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
library(tidyverse)
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
g <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
g
g <- ggplot(world.data, aes(x = free_labor)) +
geom_histogram(binwidth = 1) +  # Adjust binwidth to improve the histogram
ylab("Number of countries") +
xlab("Labor freedom") +
theme_bw()
g <- ggplot(world.data, aes(x = free_labor)) +
geom_histogram(binwidth = 1) +  # Adjust binwidth to improve the histogram
ylab("Number of countries") +
xlab("Labor freedom") +
theme_bw()
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
g <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
g
ggplot(world.data, aes(x = free_labor)) +
geom_histogram(binwidth = 1) +  # Adjust binwidth to improve the histogram
ylab("Number of countries") +
xlab("Labor freedom") +
theme_bw()
cleaned_data <- world.data[is.finite(world.data$free_labor), ]
cleaned_data <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
cleaned_data <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
cleaned_data
cleaned_data <- ggplot( world.data, aes( x = free_labor ) ) +
geom_histogram(binwidth = 1) +
geom_histogram()
cleaned_data <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
cleaned_data
setwd("Documents/Poli502_Jeffrey/Data")
table(world.data $ pr_sys)
world.data $ pr <- factor(world.data $ pr_sys,
levels = c("Yes", "No"),
labels = c("PR System", "Non-PR"))
table(world.data $ pr)
table(world.data $ frac_eth3)
# view table
tail(world.data[c("country", "frac_eth3")])
# view table with country names
world.data $ frac_eth3_ord <- factor(world.data $ frac_eth3,
level = c("Low", "Medium", "High"), # order it in this way
ordered = TRUE)
table(world.data $ frac_eth3_ord)
# order the variable names
table(world.data $ frac_eth3)
table(world.data $ frac_eth3_ord)
# compare tables
table( world.data $ frac_eth3, world.data $ frac_eth3_ord )
# created two by two table
table( world.data $ pr, world.data $ frac_eth3_ord )
# created X Y table
install.packages("gmodels")
library(gmodels)
# loaded gmodels package
CrossTable(world.data$pr, world.data$frac_eth3_ord)
# ran crosstable function to display column percentages, chi squared test, and p-value
CrossTable( world.data $ pr, world.data $ frac_eth3_ord,
prop.r = FALSE,
prop.t = FALSE,
prop.chisq = FALSE,
chisq = TRUE)
# removed outputs for crosstbale
# chi sqaured equals 4.76 with 2 degrees of freedom and a p value of 0.092. We could reject the null at a 90% confidence level.
summary(world.data $ free_labor)
# view statistics for free labor variable, variable has 18 NA's
install.packages("tidyverse")
library(tidyverse)
# loaded tidyverse package
g <- ggplot( world.data, aes( x = free_labor ) ) + geom_histogram()
g <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
g
# created a graphical summary of number of countries and labor freedom
cleaned_data <- world.data[is.finite(world.data$free_labor), ]
# removed na's in new object
cleaned_data <- ggplot( world.data, aes( x = free_labor ) ) +
geom_histogram(binwidth = 1) +
geom_histogram()
cleaned_data <- g + ylab("Number of countries") + xlab("Labor freedom") + theme_bw()
cleaned_data
# graphed varibale without NA's and new binwidth value
install.packages("tidyverse")
summary(world.data $ unions)
g <- ggplot( world.data, aes( x = unions ) ) + geom_histogram()
g <- g + ylab("Number of countries") + xlab("Percent laborers in unions")  + theme_bw()
g
unions_clean <- world.data$unions[!is.na(world.data$unions)]
g <- ggplot( world.data, aes( x = unions_clean ) ) + geom_histogram()
g <- g + ylab("Number of countries") + xlab("Percent laborers in unions")  + theme_bw()
g
g <- ggplot(world.data, aes(x = unions)) +
geom_histogram(na.rm = TRUE) +  # use statbin to remove NA's
ylab("Number of countries") +
xlab("Percent laborers in unions") +
theme_bw()
g
ggsave(file="hist-unions.pdf", width=8, height=5)
g <- ggplot(world.data, aes(x = unions)) +
geom_histogram(na.rm = TRUE) +  # use statbin to remove NA's
ylab("Number of countries") +
xlab("Percent laborers in unions") +
theme_bw()
g
g <- ggplot(world.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- g + ylab("Labor freedom") + xlab("Percent laborers in unions")
g
lab.uni.mat <- as.matrix(world.data[ c("unions","free_labor")])
rcorr(lab.uni.mat, type = "pearson")
install.packages("Hmisc")
rcorr(lab.uni.mat, type = "pearson")
library(Hmisc)
rcorr(lab.uni.mat, type = "pearson")
mean.y <- mean(lab.data $ free_labor)
lab.data <- world.data[is.na(world.data $ unions) == FALSE & is.na(world.data $ free_labor) == FALSE, ]
mean.y <- mean(lab.data $ free_labor)
mean.x <- mean(lab.data $ unions)
mean.y
mean.x
g <- ggplot( lab.data, aes( x = unions, y = free_labor) ) + geom_point( )  + theme_bw()
g <- g + ylab("Labor freedom") + xlab("Percent laborers in unions")
g <- g + geom_hline( aes( yintercept = mean.y))
g <- g + geom_vline( aes( xintercept = mean.x))
g
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- g + geom_text(aes(label = country))
g <- g + ylab("Labor freedom") + xlab("Percent laborers in unions")
g <- g + geom_hline( aes( yintercept = mean.y))
g <- g + geom_vline( aes( xintercept = mean.x))
g
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- g + geom_label_repel(aes(label = country, size =12))
library(ggrepel)
install.packages("ggrepel")
library(ggrepel
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- g + geom_label_repel(aes(label = country, size =12))
install.packages("ggrepel")
library(ggrepel)
library(ggrepel)
library(ggrepel)
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- g + geom_label_repel(aes(label = country, size =12))
g <- g + ylab("Labor freedom") + xlab("Percent laborers in unions")
g <- g + geom_hline( aes( yintercept = mean.y))
g <- g + geom_vline( aes( xintercept = mean.x))
g
library(ggrepel)
options(ggrepel.max.overlaps = Inf) # show all labels
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
# g <- g + geom_text(aes(label = country))
# g <- g + geom_text_repel(aes(label = country))
g <- g + geom_label_repel(aes(label = country, size =12))
g <- g + ylab("Labor freedom") + xlab("Percent laborers in unions")
g <- g + geom_hline( aes( yintercept = mean.y))
g <- g + geom_vline( aes( xintercept = mean.x))
# g  = g + theme( plot.title=element_text(size=16,face="bold"),
#        axis.text=element_text(size=18),
#        axis.title=element_text(size=20,face="bold"))
# g = g + geom_text(aes(size = 12))
g
rm(list = ls())
# cleaned up enviorenment
setwd("Documents/Poli502_Jeffrey/Data")
library(ggrepel)
options(ggrepel.max.overlaps = Inf) # show all labels
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
library(ggrepel)
options(ggrepel.max.overlaps = Inf) # show all labels
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
g <- ggplot(lab.data, aes( x = unions, y = free_labor) ) + geom_point()  + theme_bw()
setwd("Documents/Poli502_Jeffrey/Data")
world.data $ pr <- factor(world.data $ pr_sys,
levels = c("Yes", "No"),
labels = c("PR System", "Non-PR"))
rm(list = ls())
setwd("Documents/Poli502_Jeffrey/Data")
world.data <- read.csv("world.csv")
setwd("Documents/Poli502_Jeffrey/Data")
rm(list = ls())
file.exists("/Users/jackjeffrey/Poli502_Jeffrey/Data/Suicide_Bombings_MiddleEast_.csv")
file.exists("Suicide_Bombings_MiddleEast_.csv")
grouped_data <- data %>%
group_by(country, actor1) %>%
summarize(total_fatalities = sum(fatalities, na.rm = TRUE))
getwd
get(wd)
getwd()
setwd("Users/jackjeffrey/Poli502_Jeffrey/Data")
setwd("/Users/jackjeffrey/Poli502_Jeffrey/Data")
file.exists("/Users/jackjeffrey/Poli502_Jeffrey/Data")
setwd("/Users/jackjeffrey/Documents/Poli502_Jeffrey/Data")
data <- read.csv("Suicide_Bombings_MiddleEast_.csv")
head(data)
install.packages("dplyr")
library(dplyr)
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE)) %>%
arrange(country, desc(Total_Fatalities))
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE)) %>%
arrange(country, desc(Total_Fatalities))
summary_actor1 <- suppressWarnings(
data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
)
install.packages("dplyr")
library(dplyr)
summary_actor1 <- suppressWarnings(
data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
)
install.packages("dplyr")
library(dplyr)
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE)) %>%
arrange(country, desc(Total_Fatalities))
summary_actor1
View(summary_actor1)
top_actors <- summary_actor1 %>%
group_by(country) %>%
slice_max(order_by = Total_Fatalities, n = 1)
View(top_actors)
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
top_actors2 <- summary_actor2 %>%
group_by(country) %>%
slice_max(order_by = Total_Fatalities, n = 1)
View(top_actors2)
library(knitr)
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("dplyr")
library(dplyr)
install.packages("knitr")
library(knitr)
install.packages("knitr")
install.packages("kableExtra")  # Add the kableExtra package
library(kableExtra
summary_actor1 <- data %>%
getwd()
setwd("/Users/jackjeffrey/Documents/Poli502_Jeffrey/Data")
data <- read.csv("Suicide_Bombings_MiddleEast_.csv")
head(data)
# Install and load required packages
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
if (!requireNamespace("knitr", quietly = TRUE)) {
install.packages("knitr")
}
library(knitr)
if (!requireNamespace("kableExtra", quietly = TRUE)) {
install.packages("kableExtra")
}
library(kableExtra)
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
# Display the summary table for Actor1 with intuitive caption
summary_actor1 %>%
kable("latex", caption = "Fatalities Caused by Attacking Group (Actor 1) by Country") %>%
kable_styling("striped", full_width = F)
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
# Display the summary table for Actor2 with intuitive caption
summary_actor2 %>%
kable("latex", caption = "Fatalities Caused by Target Group (Actor 2) by Country") %>%
kable_styling("striped", full_width = F)
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
# Display the summary table for Actor2 with intuitive caption
summary_actor2 %>%
kable("latex", caption = "Fatalities Caused by Target Group (Actor 2) by Country") %>%
kable_styling("striped", full_width = F)
getwd()
setwd("/Users/jackjeffrey/Documents/Poli502_Jeffrey/Data")
data <- read.csv("Suicide_Bombings_MiddleEast_.csv")
head(data)
# Install and load required packages
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
if (!requireNamespace("knitr", quietly = TRUE)) {
install.packages("knitr")
}
library(knitr)
if (!requireNamespace("kableExtra", quietly = TRUE)) {
install.packages("kableExtra")
}
library(kableExtra)
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
# Display the summary table for Actor1 with intuitive caption
summary_actor1 %>%
kable(caption = "Fatalities Caused by Attacking Group (Actor 1) by Country") %>%
kable_styling("striped", full_width = F)
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities))
# Display the summary table for Actor2 with intuitive caption
summary_actor2 %>%
kable(caption = "Fatalities Caused by Target Group (Actor 2) by Country") %>%
kable_styling("striped", full_width = F)
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1)
# Display the summary table for Actor1 with intuitive caption
summary_actor1 %>%
kable(caption = "Fatalities Caused by Attacking Group (Actor 1) by Country") %>%
kable_styling("striped", full_width = F)
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1)
# Display the summary table for Actor2 with intuitive caption
summary_actor2 %>%
kable(caption = "Fatalities Caused by Target Group (Actor 2) by Country") %>%
kable_styling("striped", full_width = F)
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1)
# Display the summary table for Actor1 with enhanced colors and styles
summary_actor1 %>%
kable(caption = "Fatalities Caused by Attacking Group (Actor 1) by Country") %>%
kable_styling("striped", full_width = F) %>%
column_spec(3, background = "lightblue", color = "black", bold = TRUE) %>%
row_spec(0, bold = TRUE, font_size = 14, color = "white", background = "darkblue") %>%
row_spec(1:nrow(summary_actor1), color = "black", background = "lightyellow") %>%
add_header_above(c("Country and Actor" = 2, "Fatalities" = 1))
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>  %>%
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>  %>%
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>  %>%
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>  %>%
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>  %>%
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1)
# Display the summary table for Actor2 with enhanced colors and styles
summary_actor2 %>%
kable(caption = "Fatalities Caused by Target Group (Actor 2) by Country") %>%
kable_styling("striped", full_width = F) %>%
column_spec(3, background = "lightgreen", color = "black", bold = TRUE) %>%
row_spec(0, bold = TRUE, font_size = 14, color = "white", background = "darkgreen") %>%
row_spec(1:nrow(summary_actor2), color = "black", background = "lightpink") %>%
add_header_above(c("Country and Target" = 2, "Fatalities" = 1))
# Create summary for Actor1 and rename column
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1) %>%
rename(`Bomber's Affiliation` = actor1)
# Display the table with enhanced styling
summary_actor1 %>%
kable(caption = "Fatalities Caused by Bomber's Affiliation by Country") %>%
kable_styling("striped", full_width = F) %>%
column_spec(3, background = "lightblue", color = "black", bold = TRUE) %>%
row_spec(0, bold = TRUE, font_size = 14, color = "white", background = "darkblue") %>%
row_spec(1:nrow(summary_actor1), color = "black", background = "lightyellow") %>%
add_header_above(c("Country and Bomber" = 2, "Fatalities" = 1))
# Create summary for Actor1 and rename column
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total Fatalities)) %>%
# Create summary for Actor1 and rename column
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1) %>%
rename(`Bomber's Affiliation` = actor1)
# Display the table with enhanced styling
summary_actor1 %>%
kable(caption = "Fatalities Caused by Bomber's Affiliation by Country") %>%
kable_styling("striped", full_width = F) %>%
column_spec(3, background = "lightblue", color = "black", bold = TRUE) %>%
row_spec(0, bold = TRUE, font_size = 14, color = "white", background = "darkblue") %>%
row_spec(1:nrow(summary_actor1), color = "black", background = "lightyellow") %>%
add_header_above(c("Country and Bomber" = 2, "Fatalities" = 1))
# Create summary for Actor1, rename columns
summary_actor1 <- data %>%
group_by(country, actor1) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1) %>%
rename(Country = country, `Bomber's Affiliation` = actor1, `Total Fatalities` = Total_Fatalities)
# Display the table with enhanced styling
summary_actor1 %>%
kable(caption = "Fatalities Caused by Bomber's Affiliation by Country") %>%
kable_styling("striped", full_width = F) %>%
column_spec(3, background = "lightblue", color = "black", bold = TRUE) %>%
row_spec(0, bold = TRUE, font_size = 14, color = "white", background = "darkblue") %>%
row_spec(1:nrow(summary_actor1), color = "black", background = "lightyellow") %>%
add_header_above(c("Country and Bomber" = 2, "Fatalities" = 1))
# Create summary for Actor2, rename columns
summary_actor2 <- data %>%
group_by(country, actor2) %>%
summarise(Total_Fatalities = sum(fatalities, na.rm = TRUE), .groups = "drop") %>%
arrange(country, desc(Total_Fatalities)) %>%
group_by(country) %>%
slice_max(Total_Fatalities, n = 1) %>%
rename(Country = country, `Targeted Group` = actor2, `Total Fatalities` = Total_Fatalities)
# Display the table with the same color scheme
summary_actor2 %>%
kable(caption = "Fatalities Caused by Targeted Group by Country") %>%
kable_styling("striped", full_width = F) %>%
column_spec(3, background = "lightblue", color = "black", bold = TRUE) %>%
row_spec(0, bold = TRUE, font_size = 14, color = "white", background = "darkblue") %>%
row_spec(1:nrow(summary_actor2), color = "black", background = "lightyellow") %>%
add_header_above(c("Country and Target" = 2, "Fatalities" = 1))
